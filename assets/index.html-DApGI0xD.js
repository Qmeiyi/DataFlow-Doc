import{_ as t,c as o,b as a,o as i}from"./app-DT4DhCK_.js";const c={};function r(n,e){return i(),o("div",null,e[0]||(e[0]=[a('<h2 id="new-algorithm" tabindex="-1"><a class="header-anchor" href="#new-algorithm"><span>New Algorithm</span></a></h2><p>DataFlow算子在具体实现上分为两种</p><ol><li><p>有统一基类的算子，位于<code>dataflow/Eval</code>或<code>dataflow/process</code>下，这些算子需要实现基类所需的固定方法（如<code>__init__()</code>, <code>evaluate_batch()</code>, <code>filter_func()</code>等）</p></li><li><p>没有统一基类的算子，位于<code>dataflow/generator/algorithm</code>文件夹，这些算子必须实现<code>__init__</code>和<code>run()</code>方法。</p></li></ol><p>如果想要在DataFlow中添加新算子，在实现算子及其所包含的方法后需要进行如下操作：</p><ol><li><p>在算子所在文件夹下添加包含算子类的文件</p></li><li><p>在该文件中导入Registry实例，并用<code>register()</code>方法修饰</p></li><li><p>在算子所在文件夹下的__init__.py文件中，向<code>_import_structure</code>变量添加算子指向的相对路径。</p></li></ol><p>如果有必要添加新的算子文件夹，需要在<code>dataflow/utils/registry.py</code>中进行相应修改。</p>',6)]))}const d=t(c,[["render",r]]),s=JSON.parse('{"path":"/zh/dev_guide/new_algo/","title":"新算子","lang":"zh-CN","frontmatter":{"title":"新算子","createTime":"2025/06/12 12:00:00","permalink":"/zh/dev_guide/new_algo/"},"readingTime":{"minutes":0.73,"words":219},"git":{"createdTime":1749717987000,"updatedTime":1749801349000,"contributors":[{"name":"MOLYHECI","username":"MOLYHECI","email":"molyheci@outlook.com","commits":2,"avatar":"https://avatars.githubusercontent.com/MOLYHECI?v=4","url":"https://github.com/MOLYHECI"},{"name":"Sunnyhaze","username":"Sunnyhaze","email":"mxch1122@126.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Sunnyhaze?v=4","url":"https://github.com/Sunnyhaze"}]},"filePathRelative":"zh/notes/dev_guide/new_algo.md","headers":[]}');export{d as comp,s as data};
